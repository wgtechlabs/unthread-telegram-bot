# =============================================================================
# UNTHREAD TELEGRAM BOT - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values
# =============================================================================

# ======= Bot Configuration =======
# Telegram Bot Token
# How to get: Message @BotFather on Telegram, create a new bot with /newbot
# Example: 1234567890:ABCdefGHIjklMNOpqrsTUVwxyz
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# Unthread API Key
# How to get: Login to Unthread dashboard → Settings → API Keys → Generate new key
# Example: ut_live_1234567890abcdef
UNTHREAD_API_KEY=your_unthread_api_key_here

# Unthread Slack Channel ID
# How to get: Unthread dashboard → Settings → Integrations → Slack → Channel ID
# Example: C1234567890
UNTHREAD_SLACK_CHANNEL_ID=your_unthread_slack_channel_id_here

# Unthread Webhook Secret
# How to get: Unthread dashboard → Settings → Webhooks → Create webhook → Copy secret
# Example: whsec_1234567890abcdef
UNTHREAD_WEBHOOK_SECRET=your_unthread_webhook_secret_here

# Admin Users Configuration (REQUIRED)
# IMPORTANT: Replace with your actual Telegram user ID or the bot will be unusable!
# How to get: Message @userinfobot on Telegram to get your user ID
# Format: Comma-separated list of Telegram user IDs who can run admin commands like /setup
# Example: ADMIN_USERS=123456789,987654321
# WARNING: If this contains placeholder values, NO ONE can configure groups!
ADMIN_USERS=your_telegram_user_id_here

# ======= Infrastructure =======
# Database Credentials (CHANGE THESE IN PRODUCTION!)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=unthread_telegram_bot

# Docker (default): redis://redis-platform:6379, redis://redis-webhook:6379
# Local development: redis://localhost:6379, redis://localhost:6380
# IMPORTANT: Both Redis URLs are REQUIRED for proper bot operation
# - PLATFORM_REDIS_URL: Bot state management and caching
# - WEBHOOK_REDIS_URL: Agent response delivery (CRITICAL for two-way communication)
PLATFORM_REDIS_URL=redis://redis-platform:6379
WEBHOOK_REDIS_URL=redis://redis-webhook:6379

# Docker (default): postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-platform:5432/${POSTGRES_DB}
# Local development: postgresql://postgres:postgres@localhost:5432/${POSTGRES_DB}
# Note: ?sslmode=disable is automatically added when DATABASE_SSL_VALIDATE=full
POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-platform:5432/${POSTGRES_DB}

# ======= Application Settings =======
NODE_ENV=development
WEBHOOK_POLL_INTERVAL=1000
COMPANY_NAME=Unthread

# Default priority for new tickets created through the bot
# Allowed values: 3 (low), 5 (medium), 7 (high), 9 (critical)
# Leave empty or remove to create tickets without priority setting
UNTHREAD_DEFAULT_PRIORITY=5

# SSL Configuration
# - true: Disables SSL certificate validation (rejectUnauthorized=false, but SSL still encrypted)
# - full: Disables SSL completely (automatically adds ?sslmode=disable to connection)
# - false/undefined: Enables SSL with certificate validation (production default)
DATABASE_SSL_VALIDATE=true